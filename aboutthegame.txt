// === ЗАДАЧА =============================================
// Сгенерируй полный фронтовый проект "GLITCH RUNNER" — вертикальный top-down
// roguelike-autoshooter (Vampire Survivors-like) на чистом канвасе.
//
// ✔ Портретная ориентация (mobile-first, 100 % vh).
// ✔ Работает как статический сайт: index.html в корне, *.js и *.css там же.
// ✔ Никаких бинарников, png, шрифтов — только текст, CSS и JS.
// ✔ Деплой без настроек на Netlify (достаточно index.html в корне).
// ========================================================



// ---------- ФАЙЛОВАЯ СТРУКТУРА --------------------------
// ./index.html      — разметка, подключение стилей/скриптов.
// ./styles.css      — визуальный стиль (CRT+неон+глитч).
// ./game.js         — вся логика игры.
// ./noise.js        — минимальный open-simplex (ES модуль) для процедурных чанков.
// (никаких других файлов)

// ---------- VISUAL VIBE (опиши в коде комментариями) ----
// • Чёрный фон (#03050a) с лёгким radial-gradient из тёмно-фиолетового в центр.
// • Все сущности рендерим ctx.fillText символами: игрок '●' (#ffffff),
//   враги '▲ ■ ◆ ♥ ☠' c HSL-палитрой, лут '✦' мигает.
// • Шрифт: monospace "Courier New", font-size 24 px (читаемо на ретине).
// • Глюк-FX: короткие глобальные вспышки (ctx.globalAlpha) + shadowBlur.
// • UI (HP, XP-бар, Glitch-countdown) — фикс. div’ы сверху, прозрачность .2,
//   текст неоновый (text-shadow: 0 0 4px currentColor).
// • Orientation-lock: body {width:100vw;height:100vh;overflow:hidden;touch-action:none;}

// ---------- CORE GAMEPLAY -------------------------------
// • Canvas 100 % ширины и высоты, scale под DPR.
// • Мир делится на чанки 256×256 px, генерятся по openSimplex(seed).
// • Каждые 6 с spawnWave(difficultyScalar): враги спавнятся по краям экрана.
// • Игрок авто-запускает эффекты глифов (8 слотов-орбит).
// • Glyph = {char (▲/■/◆/♥/☠), hue, level}. Две копии => level++.
// • Цвет = стихия (красный-fire DOT, синий-slow, жёлтый-chain dmg…).
// • difficultyScalar пересчитывается каждые 10 с:
//   clamp(0.8 + (playerDPS/expDPS - 1)*0.5 - (lowHP?0.1:0) + timeSurvived/600*0.05, 0.7, 3)
// • Если 60 с подряд playerDPS > 1.4*expDPS => шанс Glitch-Event.
//   Glitch-boss 'Ω', даёт битый глиф (без кэпа перезарядки) либо стирает слот.

// ---------- КОДОВЫЕ ТРЕБОВАНИЯ --------------------------
// • Vanilla JS ES Modules, никаких фреймворков.
// • requestAnimationFrame-гамелооп, pooled объекты.
// • Физика: круг-простейшие коллизии (distance² < (r₁+r₂)²).
// • Поддержка тача: swipe = move (в 8 направлениях), тап = сбор лута.
// • Запуск без серверной части (все файлы локальны).
// • В конце — include <script type="module" src="game.js"> в index.html.
// • Шумовая функция возьми из общепринятой минимальной реализации simplex.
// • Комментарии: RU/EN mix, коротко, читабельно.

// ---------- ОУЧ-КНОПКА -----------------------------------
// • Добавь dev-кнопку “Force Glitch” (только в ?dev=1) — проверка эвента.

// ---------- ФИНАЛ ---------------------------------------
// Сгенерируй **полный текст** каждого файла подряд,
// начинай с ***=== index.html ===***, затем ***=== styles.css ===***,
// затем ***=== noise.js ===***, затем ***=== game.js ===***.
// Не добавляй лишних файлов, бинарных данных или внешних ссылок.
// Код должен быть готов к пушу в пустой репозиторий → Netlify auto-deploy.
// Матом в коде не злоупотребляй, но можешь вставить 1-2 шуточных комментария.
